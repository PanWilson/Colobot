// czeka na swoja kolej aby podejsc do kopalni
bool czekajWKolejce(object doCzego, object kolejka){
	if(distance(kolejka.position,doCzego.position)>5){
		return false;
	}
	else {
		wait(1);
		return true;
	}
}
//dostarcz towar z pozycji towaru do miejsca docelowego
void dostarczTowar(object skad, object gdzie){
	goto(skad.position);
	grab();
	goto(new point(gdzie.position.x+10,gdzie.position.y,gdzie.position.z));
	drop();
}


//dostarcz towar z pozycji towaru do miejsca docelowego + uklada w rzedzie
void dostarczTowar(object skad, object gdzie,int i){
	goto(skad.position);
	grab();
	goto(new point(gdzie.position.x,gdzie.position.y+5+2*i,gdzie.position.z));
	drop();
}


void sprawdzEnergie(object kogo,object gdzie,float poziom, object drugi){
	if(kogo.energyCell.energyLevel<poziom){
		goto(space(gdzie.position));
		    while(czekajWKolejce(gdzie, drugi)){
		}
		goto(gdzie.position);
		wait(5);
	}
}
extern void object::Wspolpraca()
{
	object kopalnia = radar(Derrick);
	object huta = radar(Converter);
	object stacja = radar(PowerStation);
	object samolot = radar(WingedGrabber);
	object cell= radar(NuclearCell);
	object flag = radar(BlueFlag);
	
	
	for(int i =0;i<5;i++){
		
		//ustawia sie w swoim miejscu pod kopalnia i czeka w kolejce
		goto(new point(kopalnia.position.x+4,kopalnia.position.y-4,kopalnia.position.z));
		while(czekajWKolejce(kopalnia, samolot)){
		}
		
		dostarczTowar(kopalnia, huta,i);
		
		sprawdzEnergie(this,stacja,0.30,samolot);
	}
	
	//dostarcza beterie do transportera naziemnego
	object bateria = search(PowerCell,stacja.position);
	dostarczTowar(bateria, huta);
	dostarczTowar(cell, flag);
	goto(space(stacja.position));
}
