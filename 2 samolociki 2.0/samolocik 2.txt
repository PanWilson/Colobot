//Zmienia dlugosc vectora
point zmienDlugosc(point vector, float dlugosc){
	float hlpDlug = sqrt(pow(vector.x,2)+pow(vector.y,2));
	float prop = dlugosc/hlpDlug;
	return new point(vector.x*prop,vector.y*prop,vector.z);
}

//Znajduje vector ktory okresla kierunek obiektu
point vectorPrzod(object obiekt){
	float x,y,z;
	y = tan(obiekt.orientation)*10;
	x=10;
	z=0;
	if(obiekt.orientation<=270&&obiekt.orientation>90){
		x*=-1;
		y*=-1;
	}
	return new point(x,y,z);
}

// czeka na swoja kolej aby podejsc do kopalni
bool czekajWKolejce(object doCzego, object kolejka){
	if(distance(kolejka.position,doCzego.position)>12){
		return false;
	}
	else {
		wait(1);
		return true;
	}
}

//ustawia sie przed obiektem
void ustawSie(object obiekt){
	point hlpVect = vectorPrzod(obiekt);
	hlpVect =zmienDlugosc(hlpVect, 10);
	goto(new point(obiekt.position.x+hlpVect.x,obiekt.position.y+hlpVect.y,obiekt.position.z),6);
	turn(direction(obiekt.position));
}



object rozgladajSie(int szukany,int kierunek){
	object hlp;
	if((hlp = radar(szukany, kierunek, 100, 0, 20))!=null&&detect (WingedGrabber)==false)return hlp;
	else{
		wait(1);
		return hlp;
	}
}

void zaladuj(object co, object gdzie){
	goto(co.position);
	grab();
	goto(gdzie.position);
	drop();
}


//dostarcz towar z pozycji towaru do miejsca docelowego
void dostarczTowar(object skad, object gdzie){
	goto(skad.position,6);
	grab();
	goto(new point(gdzie.position.x+10,gdzie.position.y+10,gdzie.position.z),6);
	drop();
}

//dostarcz towar z pozycji towaru do miejsca docelowego + uklada w rzedzie
void dostarczTowar(object skad, object gdzie,int i){
	goto(skad.position);
	grab();
	goto(new point(gdzie.position.x,gdzie.position.y-5-2*i,gdzie.position.z),6);
	drop();
}


void sprawdzEnergie(object kogo,object gdzie,float poziom, object drugi){
	if(kogo.energyCell.energyLevel<poziom){
		goto(space(gdzie.position,4,8),6);
		    while(czekajWKolejce(gdzie, drugi)){
		}
		goto(gdzie.position);
		wait(5);
	}
}







extern void object::Wspolpraca()
{
	  object kopalnia = radar(Derrick);
	  object huta = radar(Converter);
	  object stacja = radar(PowerStation);
	  object samolot = radar(WingedGrabber);
	    object elektrownia = radar(NuclearPlant);
	    object flag = radar(BlueFlag);
	
	
	
	for(int i =0;i<5;i++){
		
		//ustawia sie w swoim miejscu pod kopalnia i czeka w kolejce
		goto(new point(kopalnia.position.x-5,kopalnia.position.y-4,kopalnia.position.z),6);
		    while(czekajWKolejce(kopalnia, samolot)){
		}
		dostarczTowar(kopalnia, huta,i);
		sprawdzEnergie(this,stacja,0.35,samolot);
	}
	
	
	object ladunek;
	int i=0;
	
	
	
	while(true){
		
		sprawdzEnergie(this,stacja,0.35,samolot);
		
		ustawSie(elektrownia);
		
		//rozglada sie na zmiane pod katem 45
		int h=45;
		while((ladunek = rozgladajSie(UraniumOre, h))==null){
		}
		
		
		//zaladowanie klocka do elektrowni i czekanie na zakonczenie przetwarzania
		zaladuj(ladunek, elektrownia);
		motor(-1,-1);
		wait(0.8);
		motor(0,0);
		wait(32);
		
		
		//odebranie klocka
		goto(elektrownia.position);
		grab();
		
		
		//oblicza pozycje w ktorej ma postawic "klocka"
		turn(direction(flag.position));
		move(distance(flag.position,position)-(20-(2-i*1.1)));
		drop();
		i++;
	}
	
}
